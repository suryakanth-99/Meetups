{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/suryakanthreddy/Desktop/React/Next/Meetup_project/pages/[meetupid]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupid;\n  // console.log(meetupId);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupdata.image,\n    title: props.meetupdata.title,\n    address: props.meetupdata.address,\n    description: props.meetupdata.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupid: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupid;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetup = await meetupcollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupdata: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/suryakanthreddy/Desktop/React/Next/Meetup_project/pages/[meetupid]/index.js"],"names":["MongoClient","ObjectId","useRouter","Fragment","MeetupDetail","MeetupDetails","props","meetupdata","image","title","address","description","getStaticPaths","client","connect","db","meetupcollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupid","toString","getStaticProps","context","meetupId","console","log","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACA;AACA;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMnB,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACmB,OAAlB,CAA0B;AAAEf,IAAAA,GAAG,EAAEnB,QAAQ,CAAC+B,QAAD;AAAf,GAA1B,CAArB;AACAnB,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAEV,MAAM,CAACN,GAAP,CAAWS,QAAX,EADM;AAEVpB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KAFJ;AAGVC,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAHN;AAIVF,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAJJ;AAKVG,QAAAA,WAAW,EAAEe,MAAM,CAACf;AALV;AADP;AADF,GAAP;AAWD;AAED,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nfunction MeetupDetails(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupid;\n  // console.log(meetupId);\n  return (\n    <MeetupDetail\n      image={props.meetupdata.image}\n      title={props.meetupdata.title}\n      address={props.meetupdata.address}\n      description={props.meetupdata.description}\n    />\n  );\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupid: meetup._id.toString(),\n      },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupid;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetup = await meetupcollections.findOne({ _id: ObjectId(meetupId) });\n  client.close();\n  return {\n    props: {\n      meetupdata: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}