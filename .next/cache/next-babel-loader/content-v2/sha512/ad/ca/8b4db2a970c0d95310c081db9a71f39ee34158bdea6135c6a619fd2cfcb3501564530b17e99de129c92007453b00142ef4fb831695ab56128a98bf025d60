{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/suryakanthreddy/Desktop/React/Next/Meetup_project/pages/[meetupid]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupid;\n  // console.log(meetupId);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupdata.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupdata.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupdata.image,\n      title: props.meetupdata.title,\n      address: props.meetupdata.address,\n      description: props.meetupdata.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupid: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupid;\n  const client = await MongoClient.connect(\"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetup = await meetupcollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupdata: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/suryakanthreddy/Desktop/React/Next/Meetup_project/pages/[meetupid]/index.js"],"names":["MongoClient","ObjectId","useRouter","Fragment","Head","MeetupDetail","MeetupDetails","props","meetupdata","title","description","image","address","getStaticPaths","client","connect","db","meetupcollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupid","toString","getStaticProps","context","meetupId","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACA;AACA;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AACD,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEpB,QAAQ,CAACgC,QAAD;AAAf,GAA1B,CAArB;AACAnB,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAER,MAAM,CAACN,GAAP,CAAWS,QAAX,EADM;AAEVrB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFJ;AAGVG,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAHN;AAIVD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAJJ;AAKVD,QAAAA,WAAW,EAAEiB,MAAM,CAACjB;AALV;AADP;AADF,GAAP;AAWD;AAED,eAAeJ,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nfunction MeetupDetails(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupid;\n  // console.log(meetupId);\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupdata.title}</title>\n        <meta name=\"description\" content={props.meetupdata.description} />\n      </Head>\n\n      <MeetupDetail\n        image={props.meetupdata.image}\n        title={props.meetupdata.title}\n        address={props.meetupdata.address}\n        description={props.meetupdata.description}\n      />\n    </Fragment>\n  );\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupid: meetup._id.toString(),\n      },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupid;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-surya:hello123@cluster0.bd0g5.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetup = await meetupcollections.findOne({ _id: ObjectId(meetupId) });\n  client.close();\n  return {\n    props: {\n      meetupdata: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}